<?php

namespace Drupal\ejikznayka\Plugin\Field\FieldFormatter;

use Drupal\Core\Field\FormatterBase;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Plugin implementation of the 'ejikznayka_scenario_play' formatter.
 *
 * @FieldFormatter(
 *   id = "ejikznayka_scenario_play",
 *   label = @Translation("Play scenario"),
 *   field_types = {
 *     "ejikznayka_scenario"
 *   }
 * )
 */
class ScenarioPlayFormatter extends FormatterBase {

  /**
   * {@inheritdoc}
   */
  public function viewElements(FieldItemListInterface $items, $langcode) {
    $elements = [];

    /** @var \Drupal\Core\TypedData\Plugin\DataType\ItemList $items */
    foreach ($items as $delta => $item) {
      $js_config = [
        'count' => $item->count,
        'interval' => $item->display_settings['interval'],
        'minus' => $item->display_settings['minus'],
        'keep' => ($item->display_settings['column'] == 'single' ? FALSE : $item->display_settings['keep']),
        'random_location' => $item->display_settings['random_location'],
        'mark' => $config['mark'],
        'column' => $item->display_settings['column'],
        'font_size' => $item->display_settings['font_size'],
      ];
      $js_config['data']['sequence'] = $item->sequence;
      $js_config['data']['positions'] = $item->positions;
      $elements[$delta] = [
        '#theme' => 'ejikznayka_arithmetics',
        '#attached' => [
          'drupalSettings' => [
            'ejikznayka' => [
              'arithmetics' => $js_config,
            ],
          ],
        ],
      ];
    }

    return $elements;
  }

  /**
   * {@inheritdoc}
   */
  public static function defaultSettings() {
    return [
      'correct_audio' => NULL,
      'incorrect_audio' => NULL,
    ];
  }

  /**
   * {@inheritdoc}
   */
  public function settingsForm(array $form, FormStateInterface $form_state) {
    $form = parent::settingsForm($form, $form_state);
    $config = \Drupal::configFactory()->getEditable('ejikznayka.arithmetics');
    $audio_array = array(
      '#type' => 'managed_file',
      '#multiple' => FALSE,
      '#upload_location' => 'public://ejikznayka',
      '#description' => $this->t('Audio file in mp3 format.'),
      '#upload_validators' => array(
        'file_validate_extensions' => array('mp3'),
        'file_validate_size' => array(102400),
      ),
    );

    $form['correct_audio'] = array(
      '#title' => $this->t('Audio for correct answer'),
      '#default_value' => $this->getSetting('correct_audio'),
    ) + $audio_array;

    $form['incorrect_audio'] = array(
      '#title' => $this->t('Audio for incorrect answer'),
      '#default_value' => $config->get('incorrect_audio'),
    ) + $audio_array;

    return $form;
  }

  /**
   * {@inheritdoc}
   */
  public function settingsSummary() {
    return parent::settingsSummary(); // TODO: Change the autogenerated stub
  }


}